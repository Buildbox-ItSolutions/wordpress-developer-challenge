{
  "name": "interpret",
  "version": "1.4.0",
  "description": "A dictionary of file extensions and associated module loaders.",
  "author": {
    "name": "Gulp Team",
    "email": "team@gulpjs.com",
    "url": "http://gulpjs.com/"
  },
  "contributors": [
    {
      "name": "Blaine Bublitz",
      "email": "blaine.bublitz@gmail.com"
    },
    {
      "name": "Tyler Kellen",
      "email": "tyler@sleekcode.net",
      "url": "http://goingslowly.com/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gulpjs/interpret.git"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.10"
  },
  "main": "index.js",
  "scripts": {
    "lint": "eslint .",
    "pretest": "rm -rf tmp/ && npm run lint",
    "test": "mocha --async-only",
    "cover": "istanbul cover _mocha --report lcovonly",
    "coveralls": "npm run cover && istanbul-coveralls"
  },
  "dependencies": {},
  "devDependencies": {
    "eslint": "^2.13.0",
    "eslint-config-gulp": "^3.0.1",
    "expect": "^1.20.2",
    "istanbul": "^0.4.3",
    "istanbul-coveralls": "^1.0.3",
    "mocha": "^3.5.3",
    "parse-node-version": "^1.0.0",
    "rechoir": "^0.6.2",
    "shelljs": "0.7.5",
    "trash-cli": "^3.0.0"
  },
  "keywords": [
    "cirru-script",
    "cjsx",
    "co",
    "coco",
    "coffee",
    "coffee-script",
    "coffee.md",
    "coffeescript",
    "csv",
    "earlgrey",
    "es",
    "es6",
    "iced",
    "iced.md",
    "iced-coffee-script",
    "ini",
    "js",
    "json",
    "json5",
    "jsx",
    "react",
    "litcoffee",
    "liticed",
    "ls",
    "livescript",
    "toml",
    "ts",
    "typescript",
    "wisp",
    "xml",
    "yaml",
    "yml"
  ],
  "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# interpret\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Travis Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nA dictionary of file extensions and associated module loaders.\n\n## What is it\nThis is used by [Liftoff](http://github.com/tkellen/node-liftoff) to automatically require dependencies for configuration files, and by [rechoir](http://github.com/tkellen/node-rechoir) for registering module loaders.\n\n## API\n\n### extensions\nMap file types to modules which provide a [require.extensions] loader.\n\n```js\n{\n  '.babel.js': [\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353\n        // which only captures the final extension (.babel.js -> .js)\n        hook({ extensions: '.js' });\n      },\n    },\n    {\n      module: 'babel-register',\n      register: function(hook) {\n        hook({ extensions: '.js' });\n      },\n    },\n    {\n      module: 'babel-core/register',\n      register: function(hook) {\n        hook({ extensions: '.js' });\n      },\n    },\n    {\n      module: 'babel/register',\n      register: function(hook) {\n        hook({ extensions: '.js' });\n      },\n    },\n  ],\n  '.babel.ts': [\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        hook({ extensions: '.ts' });\n      },\n    },\n  ],\n  '.buble.js': 'buble/register',\n  '.cirru': 'cirru-script/lib/register',\n  '.cjsx': 'node-cjsx/register',\n  '.co': 'coco',\n  '.coffee': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.coffee.md': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.csv': 'require-csv',\n  '.eg': 'earlgrey/register',\n  '.esm.js': {\n    module: 'esm',\n    register: function(hook) {\n      // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353\n      // which only captures the final extension (.babel.js -> .js)\n      var esmLoader = hook(module);\n      require.extensions['.js'] = esmLoader('module')._extensions['.js'];\n    },\n  },\n  '.iced': ['iced-coffee-script/register', 'iced-coffee-script'],\n  '.iced.md': 'iced-coffee-script/register',\n  '.ini': 'require-ini',\n  '.js': null,\n  '.json': null,\n  '.json5': 'json5/lib/require',\n  '.jsx': [\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        hook({ extensions: '.jsx' });\n      },\n    },\n    {\n      module: 'babel-register',\n      register: function(hook) {\n        hook({ extensions: '.jsx' });\n      },\n    },\n    {\n      module: 'babel-core/register',\n      register: function(hook) {\n        hook({ extensions: '.jsx' });\n      },\n    },\n    {\n      module: 'babel/register',\n      register: function(hook) {\n        hook({ extensions: '.jsx' });\n      },\n    },\n    {\n      module: 'node-jsx',\n      register: function(hook) {\n        hook.install({ extension: '.jsx', harmony: true });\n      },\n    },\n  ],\n  '.litcoffee': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.liticed': 'iced-coffee-script/register',\n  '.ls': ['livescript', 'LiveScript'],\n  '.mjs': '/absolute/path/to/interpret/mjs-stub.js',\n  '.node': null,\n  '.toml': {\n    module: 'toml-require',\n    register: function(hook) {\n      hook.install();\n    },\n  },\n  '.ts': [\n    'ts-node/register',\n    'typescript-node/register',\n    'typescript-register',\n    'typescript-require',\n    'sucrase/register/ts',\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        hook({ extensions: '.ts' });\n      },\n    },\n  ],\n  '.tsx': [\n    'ts-node/register',\n    'typescript-node/register',\n    'sucrase/register',\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        hook({ extensions: '.tsx' });\n      },\n    },\n  ],\n  '.wisp': 'wisp/engine/node',\n  '.xml': 'require-xml',\n  '.yaml': 'require-yaml',\n  '.yml': 'require-yaml',\n}\n```\n\n### jsVariants\nSame as above, but only include the extensions which are javascript variants.\n\n## How to use it\n\nConsumers should use the exported `extensions` or `jsVariants` object to determine which module should be loaded for a given extension. If a matching extension is found, consumers should do the following:\n\n1. If the value is null, do nothing.\n\n2. If the value is a string, try to require it.\n\n3. If the value is an object, try to require the `module` property. If successful, the `register` property (a function) should be called with the module passed as the first argument.\n\n4. If the value is an array, iterate over it, attempting step #2 or #3 until one of the attempts does not throw.\n\n[require.extensions]: http://nodejs.org/api/globals.html#globals_require_extensions\n\n[downloads-image]: http://img.shields.io/npm/dm/interpret.svg\n[npm-url]: https://www.npmjs.com/package/interpret\n[npm-image]: http://img.shields.io/npm/v/interpret.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/interpret\n[travis-image]: http://img.shields.io/travis/gulpjs/interpret.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/interpret\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/interpret.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/interpret\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/interpret/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n",
  "readmeFilename": "README.md",
  "gitHead": "4de57b560db597f94e41f0e49a08a2b2e00a7c5a",
  "bugs": {
    "url": "https://github.com/gulpjs/interpret/issues"
  },
  "homepage": "https://github.com/gulpjs/interpret#readme",
  "_id": "interpret@1.4.0",
  "_nodeVersion": "10.21.0",
  "_npmVersion": "6.14.4",
  "dist": {
    "integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
    "shasum": "665ab8bc4da27a774a40584e812e3e0fa45b1a1e",
    "tarball": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
    "fileCount": 6,
    "unpackedSize": 14852,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe10WXCRA9TVsSAnZWagAAef0QAIOaRpvxTi5XRQ77jHqq\nQ8fX5qH3W4CcWQvjuyNGMqccC1B1SbS4XEuUi8iOrk+xb0N1Yk/jJsZW55Aj\nbp8dMTP45j7Lmg5S2NXOiUhQCdLdCX/k8i7lnHSwyCzo8STql+6Hxu6mYtOU\nGJ1Ckd9pTMAlZtFQZf8GA8rrju+J9zLJQoiLvlhb7+NxPu0KHpIab5VwgPQF\nNnjjbRpG1aSnWh9jolLs9h05/t+KNPqgHs4v62bt9jjOq8d5l+DiGZd7B4gT\nrADiDXNrHtDGN0DbDo6toH0/CG6JUVYsvZG1ngTCBqBdI9LiggNE1YhqidUC\nR4+XzFiL/r4dfkeJSHOnAyEqdj1cg9413oRDXhq9l3HvA0Sl69UKYzs6IctS\nhY2UsJ6KZSx2Uwc419/p6B9XRxo/f7BanBi8XNo6sGdbQr04TGtWazW4penl\n1gFW8igbiqWK+CYwhTogRMUWObqXcB9qQSN8P97YWjM97iBSvyNPKV+9aQYr\nM8rU9L4OMf/CLiQxoS7mYg3ydHqrKH4rwbZMl4Mt4wAvfBcSrHTGleRkkNPU\n5JPW65UH3GG1/+hnnEEc22QyawTL1IUfKphToy10EB26ZuBUT8a5AI/+kXPX\nixGGevhMfM6wtUyX+R4NbGLvmP4dw1tJJueGaiy4CyRS7zWAG2XEjJRvsRxJ\nCjXE\r\n=ZlrL\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "maintainers": [
    {
      "name": "contra",
      "email": "yo@contra.io"
    },
    {
      "name": "phated",
      "email": "blaine.bublitz@gmail.com"
    },
    {
      "name": "sttk",
      "email": "sttk.xslet@gmail.com"
    },
    {
      "name": "tkellen",
      "email": "tyler@sleekcode.net"
    }
  ],
  "_npmUser": {
    "name": "phated",
    "email": "blaine.bublitz@gmail.com"
  },
  "directories": {},
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/interpret_1.4.0_1591166358822_0.29256471945836693"
  },
  "_hasShrinkwrap": false,
  "_shasum": "665ab8bc4da27a774a40584e812e3e0fa45b1a1e",
  "_resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
  "_from": "interpret@>=1.4.0 <2.0.0"
}
