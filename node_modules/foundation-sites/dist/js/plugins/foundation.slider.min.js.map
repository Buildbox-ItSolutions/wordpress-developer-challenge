{"version":3,"sources":["webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/universalModuleDefinition","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core\",\"commonjs\":\"./foundation.core\",\"commonjs2\":\"./foundation.core\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.keyboard\"],\"amd\":\"./foundation.util.keyboard\",\"commonjs\":\"./foundation.util.keyboard\",\"commonjs2\":\"./foundation.util.keyboard\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.motion\"],\"amd\":\"./foundation.util.motion\",\"commonjs\":\"./foundation.util.motion\",\"commonjs2\":\"./foundation.util.motion\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.touch\"],\"amd\":\"./foundation.util.touch\",\"commonjs\":\"./foundation.util.touch\",\"commonjs2\":\"./foundation.util.touch\"}","webpack://__FOUNDATION_EXTERNAL__.[name]/js/entries/plugins/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.util.triggers.js","webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/bootstrap"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__foundation_core__","__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__","__WEBPACK_EXTERNAL_MODULE__foundation_util_motion__","__WEBPACK_EXTERNAL_MODULE__foundation_util_touch__","__WEBPACK_EXTERNAL_MODULE_jquery__","__webpack_require__","r","__webpack_exports__","_foundation_core__WEBPACK_IMPORTED_MODULE_0__","d","_foundation_slider__WEBPACK_IMPORTED_MODULE_1__","Foundation","plugin","Slider","Plugin","element","options","this","$element","$","extend","defaults","data","className","Triggers","jquery__WEBPACK_IMPORTED_MODULE_0___default","_foundation_util_keyboard__WEBPACK_IMPORTED_MODULE_1__","register","ltr","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","ARROW_LEFT","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","HOME","END","rtl","value","inputs","handles","find","$handle","eq","$input","length","$fill","css","concat","attr","disabled","disabledClass","add","binding","doubleSided","$handle2","$input2","initialized","_setHandlePos","_this2","val","setHandles","pctOfBar","positionValueFunction","_logTransform","_powTransform","toFixed","vertical","parseFloat","end","start","nonLinearBase","base","Math","log","pow","$hndl","location","cb","vert","lOrT","handleDim","elemDim","isLeftHndl","moveTime","hasClass","h2Val","step","h1Val","hOrW","getBoundingClientRect","_pctOfBar","isDbl","index","dim","style","movement","handlePct","handlePos","isNaN","initialStart","Object","_foundation_util_motion__WEBPACK_IMPORTED_MODULE_2__","_this","one","trigger","clearTimeout","changedDelay","timeout","setTimeout","key","idx","initVal","initialEnd","id","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_3__","max","min","role","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","tabindex","e","windowScroll","elemOffset","barDim","barXY","_adjustValue","preventDefault","eventOffset","offset","direction","param","eventFromBar","_value","firstHndlPos","secndHndlPos","absPosition","div","left","next_val","prev_val","previousVal","_eventsForHandle","handleChangeEvent","_handleEvent","curHandle","keyCode","call","off","on","target","is","addTouch","$body","addClass","currentTarget","ev","_$handle","oldValue","newValue","decrease","handleKey","handled","position","clickPos","abs","dir","triggers","forEach","type","el","MutationObserver","i","prefixes","Listeners","Basic","Global","Initializers","timer","debounce","listener","args","apply","openListener","closeListener","toggleListener","closeableListener","Motion","animateOut","animation","fadeOut","toggleFocusListener","triggerHandler","$elem","addOpenListener","addCloseListener","addToggleListener","addCloseableListener","addToggleFocusListener","resizeListener","$nodes","scrollListener","closeMeListener","namespace","pluginId","plugins","not","yetiBoxes","plugNames","pluginName","push","_typeof","console","error","listeners","map","name","debounceGlobalListener","listeningElementsMutation","mutationRecordsList","$target","pageYOffset","attributeName","closest","elementObserver","observe","childList","characterData","subtree","attributeFilter","$document","document","addResizeListener","addScrollListener","addClosemeListener","onLoad","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_1__","a","triggersInitialized","addGlobalListeners","IHearYou","installedModules","m","modules","c","getter","o","defineProperty","enumerable","get","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","prototype","hasOwnProperty","p","s","moduleId","l"],"mappings":"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","file":"foundation.slider.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"./foundation.core\", \"./foundation.util.keyboard\", \"./foundation.util.motion\", \"./foundation.util.touch\", \"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foundation.slider\"] = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse\n\t\troot[\"__FOUNDATION_EXTERNAL__\"] = root[\"__FOUNDATION_EXTERNAL__\"] || {}, root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.slider\"] = factory(root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.keyboard\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.motion\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.touch\"], root[\"jQuery\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__foundation_core__, __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__, __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__, __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__, __WEBPACK_EXTERNAL_MODULE_jquery__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__;","import { Foundation } from './foundation.core';\n\nimport { Slider } from '../../foundation.slider';\nFoundation.plugin(Slider, 'Slider');\n\nexport { Foundation, Slider };\n","import $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { Move } from './foundation.util.motion';\nimport { GetYoDigits, rtl as Rtl } from './foundation.core.utils';\n\nimport { Plugin } from './foundation.core.plugin';\n\nimport { Touch } from './foundation.util.touch';\n\nimport { Triggers } from './foundation.util.triggers';\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider extends Plugin {\n  /**\n   * Creates a new instance of a slider control.\n   * @class\n   * @name Slider\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n    this.className = 'Slider'; // ie9 back compat\n\n  // Touch and Triggers inits are idempotent, we just need to make sure it's initialied.\n    Touch.init($);\n    Triggers.init($);\n\n    this._init();\n\n    Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast',\n        'HOME': 'min',\n        'END': 'max'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n\n    this._setInitAttr(0);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n    }\n\n    // Set handle positions\n    this.setHandles();\n\n    this._events();\n  }\n\n  setHandles() {\n    if(this.handles[1]) {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), () => {\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val());\n      });\n    } else {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val());\n    }\n  }\n\n  _reflow() {\n    this.setHandles();\n  }\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n  */\n  _pctOfBar(value) {\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\n\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    }\n\n    return pctOfBar.toFixed(2)\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n  */\n  _value(pctOfBar) {\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    }\n\n    var value\n    if (this.options.vertical) {\n      // linear interpolation which is working with negative values for start\n      // https://math.stackexchange.com/a/1019084\n      value = parseFloat(this.options.end) + pctOfBar * (this.options.start - this.options.end)\n    } else {\n      value = (this.options.end - this.options.start) * pctOfBar + parseFloat(this.options.start);\n    }\n\n    return value\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n  */\n  _logTransform(value) {\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n  */\n  _powTransform(value) {\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed\n   */\n  _setHandlePos($hndl, location, cb) {\n    // don't move if the slider has been disabled since its initialization\n    if (this.$element.hasClass(this.options.disabledClass)) {\n      return;\n    }\n    //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Move(moveTime, $hndl, function() {\n      // adjusting the left/top property of the handle, based on the percentage calculated above\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n      // fall back to next best guess.\n      if (isNaN(movement)) {\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\n      }\n      else {\n        $hndl.css(lOrT, `${movement}%`);\n      }\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n\n\n    /**\n     * Fires when the value has not been change for a given time.\n     * @event Slider#changed\n     */\n    clearTimeout(_this.timeout);\n    _this.timeout = setTimeout(function(){\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\n    }, _this.options.changedDelay);\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\n    var id = this.inputs.eq(idx).attr('id') || GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.inputs.eq(idx).val(initVal);\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': initVal,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          eventOffset = vertical ? e.pageY : e.pageX,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n      var elemOffset = this.$element.offset()[direction];\n\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n      // best way to guess this is simulated is if clientY == pageY\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\n      var eventFromBar = eventOffset - elemOffset;\n      var barXY;\n      if (eventFromBar < 0) {\n        barXY = 0;\n      } else if (eventFromBar > barDim) {\n        barXY = barDim;\n      } else {\n        barXY = eventFromBar;\n      }\n      var offsetPct = percent(barXY, barDim);\n\n      value = this._value(offsetPct);\n\n      // turn everything around for RTL, yay math!\n      if (Rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    if (val >= 0) {\n      left = val % step;\n    } else {\n      left = step + (val % step);\n    }\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   */\n  _events() {\n    this._eventsForHandle(this.$handle);\n    if(this.handles[1]) {\n      this._eventsForHandle(this.$handle2);\n    }\n  }\n\n\n  /**\n   * Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _eventsForHandle($handle) {\n    var _this = this,\n        curHandle;\n\n      const handleChangeEvent = function(e) {\n        const idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      };\n\n      // IE only triggers the change event when the input loses focus which strictly follows the HTML specification\n      // listen for the enter key and trigger a change\n      // @see https://html.spec.whatwg.org/multipage/input.html#common-input-element-events\n      this.inputs.off('keyup.zf.slider').on('keyup.zf.slider', function (e) {\n        if(e.keyCode == 13) handleChangeEvent.call(this, e);\n      });\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', handleChangeEvent);\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      })\n      // prevent events triggered by touch\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\n        e.preventDefault();\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        min: function() {\n          newValue = _this.options.start;\n        },\n        max: function() {\n          newValue = _this.options.end;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  _destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    clearTimeout(this.timeout);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @type {number}\n   * @default 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @type {number}\n   * @default 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @type {number}\n   * @default 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @type {string}\n   * @default 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  invertVertical: false,\n  /**\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @type {number}\n   * @default 500\n   */\n  changedDelay: 500,\n  /**\n  * Basevalue for non-linear sliders\n  * @option\n  * @type {number}\n  * @default 5\n  */\n  nonLinearBase: 5,\n  /**\n  * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @type {string}\n  * @default 'linear'\n  */\n  positionValueFunction: 'linear',\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\nfunction baseLog(base, value) {\n  return Math.log(value)/Math.log(base)\n}\n\nexport {Slider};\n","import $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Motion } from './foundation.util.motion';\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n\nvar Triggers = {\n  Listeners: {\n    Basic: {},\n    Global: {}\n  },\n  Initializers: {}\n}\n\nTriggers.Listeners.Basic  = {\n  openListener: function() {\n    triggers($(this), 'open');\n  },\n  closeListener: function() {\n    let id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  },\n  toggleListener: function() {\n    let id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  },\n  closeableListener: function(e) {\n    let animation = $(this).data('closable');\n\n    // Only close the first closable element. See https://git.io/zf-7833\n    e.stopPropagation();\n\n    if(animation !== ''){\n      Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  },\n  toggleFocusListener: function() {\n    let id = $(this).data('toggle-focus');\n    $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n  }\n};\n\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\nTriggers.Initializers.addOpenListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.openListener);\n  $elem.on('click.zf.trigger', '[data-open]', Triggers.Listeners.Basic.openListener);\n}\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\nTriggers.Initializers.addCloseListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.closeListener);\n  $elem.on('click.zf.trigger', '[data-close]', Triggers.Listeners.Basic.closeListener);\n}\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\nTriggers.Initializers.addToggleListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.toggleListener);\n  $elem.on('click.zf.trigger', '[data-toggle]', Triggers.Listeners.Basic.toggleListener);\n}\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\nTriggers.Initializers.addCloseableListener = ($elem) => {\n  $elem.off('close.zf.trigger', Triggers.Listeners.Basic.closeableListener);\n  $elem.on('close.zf.trigger', '[data-closeable], [data-closable]', Triggers.Listeners.Basic.closeableListener);\n}\n\n// Elements with [data-toggle-focus] will respond to coming in and out of focus\nTriggers.Initializers.addToggleFocusListener = ($elem) => {\n  $elem.off('focus.zf.trigger blur.zf.trigger', Triggers.Listeners.Basic.toggleFocusListener);\n  $elem.on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', Triggers.Listeners.Basic.toggleFocusListener);\n}\n\n\n\n// More Global/complex listeners and triggers\nTriggers.Listeners.Global  = {\n  resizeListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('resizeme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a resize event\n    $nodes.attr('data-events', \"resize\");\n  },\n  scrollListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('scrollme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a scroll event\n    $nodes.attr('data-events', \"scroll\");\n  },\n  closeMeListener: function(e, pluginId){\n    let plugin = e.namespace.split('.')[0];\n    let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n    plugins.each(function(){\n      let _this = $(this);\n      _this.triggerHandler('close.zf.trigger', [_this]);\n    });\n  }\n}\n\n// Global, parses whole document.\nTriggers.Initializers.addClosemeListener = function(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames = plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, Triggers.Listeners.Global.closeMeListener);\n  }\n}\n\nfunction debounceGlobalListener(debounce, trigger, listener) {\n  let timer, args = Array.prototype.slice.call(arguments, 3);\n  $(window).off(trigger).on(trigger, function(e) {\n    if (timer) { clearTimeout(timer); }\n    timer = setTimeout(function(){\n      listener.apply(null, args);\n    }, debounce || 10);//default time to emit scroll event\n  });\n}\n\nTriggers.Initializers.addResizeListener = function(debounce){\n  let $nodes = $('[data-resize]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'resize.zf.trigger', Triggers.Listeners.Global.resizeListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addScrollListener = function(debounce){\n  let $nodes = $('[data-scroll]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'scroll.zf.trigger', Triggers.Listeners.Global.scrollListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addMutationEventsListener = function($elem) {\n  if(!MutationObserver){ return false; }\n  let $nodes = $elem.find('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n\n    //trigger the event handler for the element depending on type\n    switch (mutationRecordsList[0].type) {\n      case \"attributes\":\n        if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        }\n        if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n         }\n        if (mutationRecordsList[0].attributeName === \"style\") {\n          $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        }\n        break;\n\n      case \"childList\":\n        $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n        $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        break;\n\n      default:\n        return false;\n      //nothing\n    }\n  };\n\n  if ($nodes.length) {\n    //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n    for (var i = 0; i <= $nodes.length - 1; i++) {\n      var elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe($nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n    }\n  }\n}\n\nTriggers.Initializers.addSimpleListeners = function() {\n  let $document = $(document);\n\n  Triggers.Initializers.addOpenListener($document);\n  Triggers.Initializers.addCloseListener($document);\n  Triggers.Initializers.addToggleListener($document);\n  Triggers.Initializers.addCloseableListener($document);\n  Triggers.Initializers.addToggleFocusListener($document);\n\n}\n\nTriggers.Initializers.addGlobalListeners = function() {\n  let $document = $(document);\n  Triggers.Initializers.addMutationEventsListener($document);\n  Triggers.Initializers.addResizeListener();\n  Triggers.Initializers.addScrollListener();\n  Triggers.Initializers.addClosemeListener();\n}\n\n\nTriggers.init = function ($, Foundation) {\n  onLoad($(window), function () {\n    if ($.triggersInitialized !== true) {\n      Triggers.Initializers.addSimpleListeners();\n      Triggers.Initializers.addGlobalListeners();\n      $.triggersInitialized = true;\n    }\n  });\n\n  if(Foundation) {\n    Foundation.Triggers = Triggers;\n    // Legacy included to be backwards compatible for now.\n    Foundation.IHearYou = Triggers.Initializers.addGlobalListeners\n  }\n}\n\nexport {Triggers};\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n"]}